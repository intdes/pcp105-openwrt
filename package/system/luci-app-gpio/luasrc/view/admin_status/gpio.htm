<%#
 Copyright 2010 Jo-Philipp Wich <jow@openwrt.org>
 Licensed to the public under the Apache License 2.0.
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[

	var obj = {};

	/*
	 * setListValue -
	 *
	 * Set a list box value
     */
	var setListValue = function( path, value )
	{
		var listbox = document.getElementById(path);
		for (var idx = 0; idx < listbox.length; idx++)
		{
			if ( String(value).trim() == listbox[idx].value.trim() )
			{
				listbox.selectedIndex = idx;
				cbi_d_update();
				break;
			}
		}
	}

	/*
	 * setTextValue -
	 *
	 * Set a text box value
     */
	var setTextValue = function( path, value )
	{
		var listbox = document.getElementById(path);
		if ( value )
			listbox.value = value.trim();
		else
			listbox.value = "";
		cbi_d_update();
	}

	/*
	 * setCheckBoxValue -
	 *
	 * Set a check box value
     */
	var setCheckBoxValue = function( path, value )
	{
		var listbox = document.getElementById(path);
		if ( value.trim() == "0" )
		{
			listbox.checked = false;
		}
		else
		{
			listbox.checked = true;
		}
	}

	/*
	 * updateGpio -
	 *
	 * Updates the configuration settings for a GPIO
     */
	var updateGpio = function( id ) 
	{
		window.scrollTo(0,0);
		setListValue( "cbid.gpio._number.GPIO", obj[id].gpio + " (" + obj[id].gpio_port_number + ")" );
		setListValue( "cbid.gpio._number.operation", "export" );
		setListValue( "cbid.gpio._number.direction", obj[id].direction );
		setTextValue( "cbid.gpio._number.label", obj[id].label );
		setCheckBoxValue( "cbid.gpio._number.state",  obj[id].value );
	}

	/*
	 * removeGpio - 
	 *
	 * Triggers a gpio to be toggled.
     */
	var toggleGpio = function( id ) 
	{
		var gpio_value = obj[id].value;
		gpio_value = (gpio_value=="0\n") ? "1" : "0";
		XHR.get('<%=luci.dispatcher.build_url("admin", "system", "gpio", "toggle")%>', { gpio: obj[id].gpio_port_number, value: gpio_value },
            function(x, data) { 
			}
        );
	}

	/*
	 * removeGpio - 
	 *
	 * Triggers a gpio to be unexported.
     */
	var removeGpio = function( id ) {

		XHR.get('<%=luci.dispatcher.build_url("admin", "system", "gpio", "remove")%>', { gpio: obj[id].gpio },
            function(x, data) { 
			}
        );
	}

	/*
	 * Triggers GPIO polling and constructs the diagnostic table.
     */
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "system", "gpio", "poll")%>', { },
        function(x, info)
        {
			var html = '';
			var d = document.getElementById('gpio_status_table');

			if (d)
			{
                /* clear all rows */
                while( d.rows.length > 1 )
                    d.rows[0].parentNode.deleteRow(1);

                /* Sort polled gpio */
				obj = info;
				obj.sort(function(a,b) {
					return parseInt(a.gpio) - parseInt(b.gpio);
				});

                /* Construct table */
				var disabled, button_type, button_value;

				for (var idx = 0; idx < obj.length; idx++)
				{
                	var tr = d.rows[0].parentNode.insertRow(-1);
					tr.className = 'cbi-section-table-row cbi-rowstyle-' + ((idx % 2) + 1);

					var gpio = obj[idx];
					tr.insertCell(-1).innerHTML = '<input class="cbi-button cbi-input-edit" type="button" value="<%:Edit%>" id=' + idx + ' onclick="updateGpio(this.id)" />';
					tr.insertCell(-1).innerHTML = gpio.gpio + " (" + gpio.gpio_port_number + ")";
					tr.insertCell(-1).innerHTML = gpio.direction;

					if ( gpio.direction.trim() == "out" )
						disabled = " ";
					else
						disabled = " disabled=true";

					if ( gpio.value == "0\n" )
					{
						button_type = "cbi-input-reset";
						button_value = "<%:0%>";
					}
					else
					{
						button_type = "cbi-input-apply";
						button_value = "<%:1%>";
					}
						
					tr.insertCell(-1).innerHTML = '<input class="cbi-button ' + button_type + '"' + disabled + ' type="button" value="' + button_value + '" id=' + idx + ' onclick="toggleGpio(this.id)" />';
					tr.insertCell(-1).innerHTML = gpio.label;
					tr.insertCell(-1).innerHTML = '<input class="cbi-button cbi-input-remove" type="button" value="<%:Unexport%>" id=' + idx + ' onclick="removeGpio(this.id)" />';

				}
			}
		}
	);
//]]></script>

<%+header%>

<div class="cbi-map">
	<fieldset class="cbi-section">
		<legend><%:Diagnostics%></legend>

		<table class="cbi-section-table" id="gpio_status_table">
			<tr class="cbi-section-table-titles">
				<th class="cbi-section-table-cell"><%:Edit%></th>
				<th class="cbi-section-table-cell"><%:GPIO%></th>
				<th class="cbi-section-table-cell"><%:Direction%></th>
				<th class="cbi-section-table-cell"><%:State%></th>
				<th class="cbi-section-table-cell"><%:Label%></th>
				<th class="cbi-section-table-cell"><%:Unexport%></th>
			</tr>
			<tr class="cbi-section-table-row">
				<td colspan="4"><em><br /><%:Collecting data...%></em></td>
			</tr>
		</table>
		
	</fieldset>
</div>

